/*
 * Tencent is pleased to support the open source community by making BK-CI 蓝鲸持续集成平台 available.
 *
 * Copyright (C) 2019 THL A29 Limited, a Tencent company.  All rights reserved.
 *
 * BK-CI 蓝鲸持续集成平台 is licensed under the MIT license.
 *
 * A copy of the MIT License is included in this file.
 *
 *
 * Terms of the MIT License:
 * ---------------------------------------------------
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 * documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of
 * the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
 * LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
 * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

// 设置为release包不带版本号
version = null

apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "org.springframework.boot"

dependencies {
    compile project(":core:common:common-api")
    compile project(":core:common:common-web")
    compile project(":core:common:common-service")
}
bootRun {
    jvmArgs = ["-Dspring.output.ansi.enabled=ALWAYS",
               "-Dfile.encoding=UTF-8"] 
//               "-Dspring.config.name=application,devops",
//               "-Dspring.profiles.active=dev,dev-gray"]
}

task copyVersionInfo() {
    if (commit == null) {
        return
    }
    if (file("$projectDir/src/main/resources").exists()) {
        file("$projectDir/src/main/resources/version.txt").text = """
           id: ${commit.id}
           message: ${commit.fullMessage}
           user: ${commit.author.name}
           email: ${commit.author.email}
           time: ${commit.date}
        """
    }
}
copyVersionInfo.dependsOn build

task copyToRelease(type: Copy, dependsOn: bootRepackage) {
    from("build/libs") {
        include("**/*.jar")
    }
    into "${rootDir}/release"
    outputs.upToDateWhen { false }
}

build.dependsOn copyToRelease
copyToRelease.dependsOn test
configurations {
    all*.exclude group: "ch.qos.logback", module: "logback-classic"
}
